class abs_test
{
	@test
	public void test_absPositive ()
	{
		assertEquals (2, abs(2));	
	}


	@test
	public void test_absNegative ()
	{
		assertEquals(3, abs(-3));
	}

	
	@test
	public void test_specialCase ()
	{
		assertEquals(0, abs(0));
		assertEquals(0, abs(-0));
		assertEquals(+inf, abs(inf));
		assertEquals(NaN, abs(NaN));
	}


}



class floorDiv_test
{
	@test
	public void test_sameSign ()
	{
		assertEquals(2, floorDiv(5,2));
		assertEquals(2, floorDiv(-5,-2));
	}

	
	public void test_differentSign ()
	{
		assertEquals(-2, floorDiv(-5,2));
	}

	public void test_specialCase ()
	{
		assertEquals(Integer.MIN_VALUE, floorDiv(Integer.MIN_VALUE, -1));
	}

	public void testExeption ()
	{
		assertThrows(ArithmeticException.class, ()-> {floorDiv(7,0)};
	}

}

assertThrows ( ArithmeticException.class, ()-> {floorDiv(7,0)};
